package com.example.demo.service;

import java.util.Collection;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.example.demo.repository.Userrepository;
import com.ibs.demo.model.User;

import java.util.Collections;


@Service
public class UserDetailsServiceImpl implements UserDetailsService{
	
	
	@Autowired 
	private Userrepository userrepository;



@Override
public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
	// TODO Auto-generated method stub
	User user = (User) userrepository.findByUserName(username).orElseThrow(() ->
    new UsernameNotFoundException("No user found " + username));
	return new org.springframework.security.core.userdetails.User(user.getUserName(),
            user.getPassword(),
            true, true, true, true,
            getAuthorities("ROLE_USER"));
}
private Collection<? extends GrantedAuthority> getAuthorities(String role_user) {
    return Collections.singletonList(new SimpleGrantedAuthority(role_user));
}
}

